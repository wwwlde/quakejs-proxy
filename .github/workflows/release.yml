name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: Build and Release
    runs-on: ubuntu-latest

    strategy:
      matrix:
        goos: [linux, darwin]
        goarch: [amd64, arm64]
        exclude:
          - goos: darwin
            goarch: arm64

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '^1.23'

    - name: Build Go app
      env:
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.goarch }}
        CGO_ENABLED: 0
      run: |
        go build -o ./quakejs-proxy-${{ matrix.goos }}-${{ matrix.goarch }} --ldflags '-w -s -extldflags "-static"' cmd/main.go

    - name: List files
      run: ls -lh

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: quakejs-proxy-${{ matrix.goos }}-${{ matrix.goarch }}
        path: ./quakejs-proxy-${{ matrix.goos }}-${{ matrix.goarch }}

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download all artifacts
      uses: actions/download-artifact@v4

    - name: List all downloaded artifacts
      run: ls -la

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: |
          ./quakejs-proxy-*/*
      env:
        GITHUB_TOKEN: ${{ secrets.RELEASE_GITHUB_TOKEN }}

  docker:
    needs: release
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download Linux binary for AMD64
      uses: actions/download-artifact@v4
      with:
        name: quakejs-proxy-linux-amd64
        path: ./amd64/

    - name: Download Linux binary for ARM64
      uses: actions/download-artifact@v4
      with:
        name: quakejs-proxy-linux-arm64
        path: ./arm64/

    - name: Rename binaries to match Dockerfile COPY
      run: |
        mv ./amd64/quakejs-proxy-linux-amd64 ./amd64/quakejs-proxy
        mv ./arm64/quakejs-proxy-linux-arm64 ./arm64/quakejs-proxy

    - name: Make binaries executable
      run: |
        chmod +x ./amd64/quakejs-proxy
        chmod +x ./arm64/quakejs-proxy

    - name: Log in to GitHub Container Registry
      run: echo "${{ secrets.RELEASE_GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build and push multi-arch Docker image
      run: |
        IMAGE_NAME=ghcr.io/${{ github.repository_owner }}/quakejs-proxy
        VERSION=${GITHUB_REF#refs/tags/}

        docker buildx create --use

        docker buildx build --platform linux/amd64,linux/arm64 \
          --tag $IMAGE_NAME:latest \
          --tag $IMAGE_NAME:$VERSION \
          --push \
          --build-context amd64=./amd64/ \
          --build-context arm64=./arm64/ \
          --file Dockerfile .
